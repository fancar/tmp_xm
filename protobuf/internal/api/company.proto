syntax = "proto3";

package api;

option go_package = "github.com/fancar/tmp_xm/internal/api";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";


// CompanyService is the service managing the Company access.
service CompanyService {
	// Log in a user
	rpc Login(LoginRequest) returns (LoginResponse) {
		option(google.api.http) = {
			post: "/api/login"
			body: "*"
		};
	}

	// Get Company-list according to filters recieved.
	rpc List(ListCompanyRequest) returns (ListCompanyResponse) {
		option(google.api.http) = {
			get: "/api/Companies"
		};
	}

	// Get returns data for the particular Company-id
	rpc Get(GetCompanyRequest) returns (GetCompanyResponse) {
		option(google.api.http) = {
			get: "/api/Companies/{id}"
		};
	}

	// Create a new Company.
	rpc Create(CreateCompanyRequest) returns (google.protobuf.Empty) {
		option(google.api.http) = {
			post: "/api/Companies"
			body: "*"
		};
	}

	// Update an existing Company.
	rpc Update(UpdateCompanyRequest) returns (google.protobuf.Empty) {
		option(google.api.http) = {
			put: "/api/Companies/{Company.id}"
			body: "*"
		};
	}

	// Delete an Company.
	rpc Delete(DeleteCompanyRequest) returns (google.protobuf.Empty) {
		option(google.api.http) = {
			delete: "/api/Companies/{id}"
		};
	}
}

message LoginRequest {
	// username
	string user = 1;

	// Password of the user.
	string password = 2;
}

message LoginResponse {
	// The JWT tag to be used to access other methods.
	string jwt = 1;
}



message Company {
	// !Remove it if you Create! Company ID.
	int64 id = 1;

	// Company name.
	string name = 2;

	// zip code
	string code = 3;	

	// home country.
	string country = 4;

	// website url
	string website = 5;

	// telephone number
	string phone = 6;    
}

message GetCompanyRequest {
	// Company ID.
	int64 id = 1;
}

message GetCompanyResponse {
	// Company object.
	Company Company = 1;

	// Created at timestamp.
	google.protobuf.Timestamp created_at = 2;

	// Last update timestamp.
	google.protobuf.Timestamp updated_at = 3;
}

message CreateCompanyRequest {
	// Company object to create.
	Company Company = 1;
}


message UpdateCompanyRequest {
	// Company object to update.
	Company Company = 1;
}

message DeleteCompanyRequest {
	// Company ID.
	int64 id = 1;
}

message ListCompanyRequest {

	// Max number of Companies to return in the result-set.
	int64 limit = 1;

	// Offset in the result-set
	int64 offset = 2;

	// Company name.
	string name = 3;

	// zip code
	string code = 4;	

	// home country.
	string country = 5;

	// website url
	string website = 6;

	// telephone number
	string phone = 7; 
}

message ListCompanyResponse {
	repeated Company result = 1;
}

