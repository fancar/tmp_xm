syntax = "proto3";

package api;

option go_package = "github.com/fancar/tmp_xm/internal/api";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";


// CompanyService is the service managing the Company access.
service CompanyService {
	// Log in a user
	rpc Login(LoginRequest) returns (LoginResponse) {
		option(google.api.http) = {
			post: "/api/login"
			body: "*"
		};
	}

	// Get returns data for the particular Company-id
	rpc Get(GetCompanyRequest) returns (GetCompanyResponse) {
		option(google.api.http) = {
			get: "/api/Companies/{id}"
		};
	}

	// Create a new Company.
	rpc Create(CreateCompanyRequest) returns (google.protobuf.Empty) {
		option(google.api.http) = {
			post: "/api/Companies"
			body: "*"
		};
	}

	// Update an existing Company.
	rpc Update(UpdateCompanyRequest) returns (google.protobuf.Empty) {
		option(google.api.http) = {
			put: "/api/Companies/{Company.id}"
			body: "*"
		};
	}

	// Delete an Company.
	rpc Delete(DeleteCompanyRequest) returns (google.protobuf.Empty) {
		option(google.api.http) = {
			delete: "/api/Companies/{id}"
		};
	}
}

enum CompanyType {
    // unknown type
    UNKNOWN = 0;	
    // for corp 
    Corporations = 1;

    // for non-profit companies
    NonProfit = 2;

    // for cooperatives
    Cooperative = 3;

    // for Sole Proprietorship
    SoleProprietorship = 4;
}

message LoginRequest {
	// username
	string user = 1;

	// Password of the user.
	string password = 2;
}

message LoginResponse {
	// The JWT tag to be used to access other methods.
	string jwt = 1;
}

message Company {
	// Company ID (128 bit UUID). Unique.
	string id = 10;

	// Company name. Max 15 characters. Unique.
	string name = 20;

	// Company description. Max 3000 characters. Optional
	string description = 30;

	// Amount of Employees. Required
	int32 employeescnt = 40; 

	// true if the company is registered. will be set to false if skipped!
	bool registered = 50;

	// Type (Corporations | NonProfit | Cooperative | SoleProprietorship). Required
	CompanyType type = 60;
}

message GetCompanyRequest {
	// Company ID.
	string id = 1;
}

message GetCompanyResponse {
	// Company object.
	Company Company = 1;
}

message CreateCompanyRequest {
	// Company object to create.
	Company Company = 1;
}


message UpdateCompanyRequest {
	// Company object to update.
	Company Company = 1;
}

message DeleteCompanyRequest {
	// Company ID.
	string id = 1;
}



